name: Build & Deploy – FastAPI + React → Azure Web App (KlintIAWebAccess)

# ────────────────────────
on:
  push:
    branches: [main]      # déploiement auto sur chaque push → main
  workflow_dispatch:       # déclenchement manuel si besoin

# ────────────────────────
permissions:
  contents: read

# Variables communes
env:
  PYTHON_VERSION: "3.11"
  NODE_VERSION: "20.x"
  APP_NAME: "KlintIAWebAccess"          # nom exact de l’App Service
  SLOT_NAME: "Production"               # laisse «Production» si pas de slot

# ────────────────────────
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # ───────── Cloner le dépôt
    - uses: actions/checkout@v4

    # ───────── FRONTEND (Vite)
    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install & build React app
      working-directory: frontend
      env:
        VITE_API_URL: "https://klintiawebaccess.azurewebsites.net"       
      run: |
        npm ci                    # install propre → package-lock.json
        npm run build             # génère ./dist

    # ───────── BACKEND (FastAPI)
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Create venv + install backend deps
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    # ───────── Copier le build React dans backend/static/
    - name: Copy React build to backend/static
      run: |
        mkdir -p backend/static
        cp -r frontend/dist/* backend/static/

    # ───────── Packager pour le déploiement
    - name: Zip artifact
      run: |
        zip -r release.zip . \
              -x "venv/**" \
                 "frontend/**" \
                 ".git/**" \
                 ".github/**"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: python-app
        path: release.zip

  # ────────────────────────
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
      url: ${{ steps.deploy.outputs.webapp-url }}

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: python-app

    - name: Unzip artifact
      run: unzip -q release.zip

    - name: Deploy to Azure Web App
      id: deploy
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.APP_NAME }}
        slot-name: ${{ env.SLOT_NAME }}
        publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_93C6421AB11B489E931AB57238016C27 }}
        package: .
